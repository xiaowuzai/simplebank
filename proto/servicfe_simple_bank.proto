syntax = "proto3";

package pb;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

import "rpc_create_user.proto";
import "rpc_update_user.proto";
import "rpc_login_user.proto";
import "rpc_verify_email.proto";

option go_package="github.com/xiaowuzai/simplebank/pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Simple Bank API";
    version: "1.0.1";
    contact: {
      name: "gRPC-Gateway project";
      url: "https://github.com/grpc-ecosystem/grpc-gateway";
      email: "none@example.com";
    };
  };
};

service SimpleBank {
	rpc CreateUser (CreateUserRequest) returns (CreateUserResponse) {
		option (google.api.http) = {
			post: "/v1/create_user"
			body: "*"
		};
	}
	rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse) {
		option (google.api.http) = {
			patch: "/v1/update_user"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description : 
				"This API is used to update user info.";
			summary : "Update user";
		};
	}
	rpc LoginUser (LoginUserRequest) returns (LoginUserResponse) {
		option (google.api.http) = {
			post: "/v1/login_user"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description : 
				"This API is used to login a registered user.";
			summary : "Login user";
		};
	}
	rpc VerifyEmail (VerifyEmailRequest) returns (VerifyEmailResponse) {
		option (google.api.http) = {
			get: "/v1/verify_email"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			description : 
				"This API is used to verify user's email address.";
			summary : "Verify email";
		};
	}
}